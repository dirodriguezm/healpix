/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: healpix.i

package healpix

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef long long swig_type_1;
typedef long long swig_type_2;
extern void _wrap_Swig_free_healpix_09aa05d3d2b4025d(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_healpix_09aa05d3d2b4025d(swig_intgo arg1);
extern void _wrap_Vec3Floats_x_set_healpix_09aa05d3d2b4025d(uintptr_t arg1, double arg2);
extern double _wrap_Vec3Floats_x_get_healpix_09aa05d3d2b4025d(uintptr_t arg1);
extern void _wrap_Vec3Floats_y_set_healpix_09aa05d3d2b4025d(uintptr_t arg1, double arg2);
extern double _wrap_Vec3Floats_y_get_healpix_09aa05d3d2b4025d(uintptr_t arg1);
extern void _wrap_Vec3Floats_z_set_healpix_09aa05d3d2b4025d(uintptr_t arg1, double arg2);
extern double _wrap_Vec3Floats_z_get_healpix_09aa05d3d2b4025d(uintptr_t arg1);
extern uintptr_t _wrap_new_Vec3Floats__SWIG_0_healpix_09aa05d3d2b4025d(void);
extern uintptr_t _wrap_new_Vec3Floats__SWIG_1_healpix_09aa05d3d2b4025d(double arg1, double arg2, double arg3);
extern void _wrap_Vec3Floats_Set_healpix_09aa05d3d2b4025d(uintptr_t arg1, double arg2, double arg3, double arg4);
extern void _wrap_Vec3Floats_set_z_phi_healpix_09aa05d3d2b4025d(uintptr_t arg1, double arg2, double arg3);
extern void _wrap_Vec3Floats_Normalize_healpix_09aa05d3d2b4025d(uintptr_t arg1);
extern uintptr_t _wrap_Vec3Floats_Norm_healpix_09aa05d3d2b4025d(uintptr_t arg1);
extern double _wrap_Vec3Floats_Length_healpix_09aa05d3d2b4025d(uintptr_t arg1);
extern double _wrap_Vec3Floats_SquaredLength_healpix_09aa05d3d2b4025d(uintptr_t arg1);
extern uintptr_t _wrap_Vec3Floats_invert_healpix_09aa05d3d2b4025d(uintptr_t arg1);
extern void _wrap_Vec3Floats_Flip_healpix_09aa05d3d2b4025d(uintptr_t arg1);
extern uintptr_t _wrap_Vec3Floats_add_healpix_09aa05d3d2b4025d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Vec3Floats_addInPlace_healpix_09aa05d3d2b4025d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Vec3Floats_subtract_healpix_09aa05d3d2b4025d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Vec3Floats_subtractInPlace_healpix_09aa05d3d2b4025d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Vec3Floats_multiply_healpix_09aa05d3d2b4025d(uintptr_t arg1, double arg2);
extern uintptr_t _wrap_Vec3Floats_divide_healpix_09aa05d3d2b4025d(uintptr_t arg1, double arg2);
extern uintptr_t _wrap_Vec3Floats_multiplyInPlace_healpix_09aa05d3d2b4025d(uintptr_t arg1, double arg2);
extern void _wrap_delete_Vec3Floats_healpix_09aa05d3d2b4025d(uintptr_t arg1);
extern double _wrap_Healpix_undef_get_healpix_09aa05d3d2b4025d(void);
extern swig_intgo _wrap_RING_healpix_09aa05d3d2b4025d(void);
extern swig_intgo _wrap_NEST_healpix_09aa05d3d2b4025d(void);
extern uintptr_t _wrap_new_HEALPixMap__SWIG_0_healpix_09aa05d3d2b4025d(void);
extern uintptr_t _wrap_new_HEALPixMap__SWIG_1_healpix_09aa05d3d2b4025d(swig_intgo arg1, swig_intgo arg2);
extern swig_type_1 _wrap_HEALPixMap_pix2ring_healpix_09aa05d3d2b4025d(uintptr_t arg1, swig_type_2 arg2);
extern void _wrap_delete_HEALPixMap_healpix_09aa05d3d2b4025d(uintptr_t arg1);
extern double _wrap_orientation_healpix_09aa05d3d2b4025d(uintptr_t arg1, uintptr_t arg2);
extern double _wrap_v_angle_healpix_09aa05d3d2b4025d(uintptr_t arg1, uintptr_t arg2);
extern double _wrap_cosdist_zphi_healpix_09aa05d3d2b4025d(double arg1, double arg2, double arg3, double arg4);
extern void _wrap_find_enclosing_circle_healpix_09aa05d3d2b4025d(uintptr_t arg1, uintptr_t arg2, swig_voidp arg3);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


type _ sync.Mutex

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_healpix_09aa05d3d2b4025d(C.swig_intgo(_swig_i_0)))
	return swig_r
}

type SwigcptrVec3Floats uintptr

func (p SwigcptrVec3Floats) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVec3Floats) SwigIsVec3Floats() {
}

func (arg1 SwigcptrVec3Floats) SetX(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vec3Floats_x_set_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrVec3Floats) GetX() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Vec3Floats_x_get_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVec3Floats) SetY(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vec3Floats_y_set_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrVec3Floats) GetY() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Vec3Floats_y_get_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVec3Floats) SetZ(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vec3Floats_z_set_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrVec3Floats) GetZ() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Vec3Floats_z_get_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewVec3Floats__SWIG_0() (_swig_ret Vec3Floats) {
	var swig_r Vec3Floats
	swig_r = (Vec3Floats)(SwigcptrVec3Floats(C._wrap_new_Vec3Floats__SWIG_0_healpix_09aa05d3d2b4025d()))
	return swig_r
}

func NewVec3Floats__SWIG_1(arg1 float64, arg2 float64, arg3 float64) (_swig_ret Vec3Floats) {
	var swig_r Vec3Floats
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Vec3Floats)(SwigcptrVec3Floats(C._wrap_new_Vec3Floats__SWIG_1_healpix_09aa05d3d2b4025d(C.double(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2))))
	return swig_r
}

func NewVec3Floats(a ...interface{}) Vec3Floats {
	argc := len(a)
	if argc == 0 {
		return NewVec3Floats__SWIG_0()
	}
	if argc == 3 {
		return NewVec3Floats__SWIG_1(a[0].(float64), a[1].(float64), a[2].(float64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVec3Floats) Set(arg2 float64, arg3 float64, arg4 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_Vec3Floats_Set_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2), C.double(_swig_i_3))
}

func (arg1 SwigcptrVec3Floats) Set_z_phi(arg2 float64, arg3 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Vec3Floats_set_z_phi_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2))
}

func (arg1 SwigcptrVec3Floats) Normalize() {
	_swig_i_0 := arg1
	C._wrap_Vec3Floats_Normalize_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrVec3Floats) Norm() (_swig_ret Vec3Floats) {
	var swig_r Vec3Floats
	_swig_i_0 := arg1
	swig_r = (Vec3Floats)(SwigcptrVec3Floats(C._wrap_Vec3Floats_Norm_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVec3Floats) Length() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Vec3Floats_Length_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVec3Floats) SquaredLength() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Vec3Floats_SquaredLength_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVec3Floats) Invert() (_swig_ret Vec3Floats) {
	var swig_r Vec3Floats
	_swig_i_0 := arg1
	swig_r = (Vec3Floats)(SwigcptrVec3Floats(C._wrap_Vec3Floats_invert_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVec3Floats) Flip() {
	_swig_i_0 := arg1
	C._wrap_Vec3Floats_Flip_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrVec3Floats) Add(arg2 Vec3Floats) (_swig_ret Vec3Floats) {
	var swig_r Vec3Floats
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Vec3Floats)(SwigcptrVec3Floats(C._wrap_Vec3Floats_add_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVec3Floats) AddInPlace(arg2 Vec3Floats) (_swig_ret Vec3Floats) {
	var swig_r Vec3Floats
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Vec3Floats)(SwigcptrVec3Floats(C._wrap_Vec3Floats_addInPlace_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVec3Floats) Subtract(arg2 Vec3Floats) (_swig_ret Vec3Floats) {
	var swig_r Vec3Floats
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Vec3Floats)(SwigcptrVec3Floats(C._wrap_Vec3Floats_subtract_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVec3Floats) SubtractInPlace(arg2 Vec3Floats) (_swig_ret Vec3Floats) {
	var swig_r Vec3Floats
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Vec3Floats)(SwigcptrVec3Floats(C._wrap_Vec3Floats_subtractInPlace_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVec3Floats) Multiply(arg2 float64) (_swig_ret Vec3Floats) {
	var swig_r Vec3Floats
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Vec3Floats)(SwigcptrVec3Floats(C._wrap_Vec3Floats_multiply_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVec3Floats) Divide(arg2 float64) (_swig_ret Vec3Floats) {
	var swig_r Vec3Floats
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Vec3Floats)(SwigcptrVec3Floats(C._wrap_Vec3Floats_divide_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVec3Floats) MultiplyInPlace(arg2 float64) (_swig_ret Vec3Floats) {
	var swig_r Vec3Floats
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Vec3Floats)(SwigcptrVec3Floats(C._wrap_Vec3Floats_multiplyInPlace_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))))
	return swig_r
}

func DeleteVec3Floats(arg1 Vec3Floats) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Vec3Floats_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0))
}

type Vec3Floats interface {
	Swigcptr() uintptr
	SwigIsVec3Floats()
	SetX(arg2 float64)
	GetX() (_swig_ret float64)
	SetY(arg2 float64)
	GetY() (_swig_ret float64)
	SetZ(arg2 float64)
	GetZ() (_swig_ret float64)
	Set(arg2 float64, arg3 float64, arg4 float64)
	Set_z_phi(arg2 float64, arg3 float64)
	Normalize()
	Norm() (_swig_ret Vec3Floats)
	Length() (_swig_ret float64)
	SquaredLength() (_swig_ret float64)
	Invert() (_swig_ret Vec3Floats)
	Flip()
	Add(arg2 Vec3Floats) (_swig_ret Vec3Floats)
	AddInPlace(arg2 Vec3Floats) (_swig_ret Vec3Floats)
	Subtract(arg2 Vec3Floats) (_swig_ret Vec3Floats)
	SubtractInPlace(arg2 Vec3Floats) (_swig_ret Vec3Floats)
	Multiply(arg2 float64) (_swig_ret Vec3Floats)
	Divide(arg2 float64) (_swig_ret Vec3Floats)
	MultiplyInPlace(arg2 float64) (_swig_ret Vec3Floats)
}

func GetHealpix_undef() (_swig_ret float64) {
	var swig_r float64
	swig_r = (float64)(C._wrap_Healpix_undef_get_healpix_09aa05d3d2b4025d())
	return swig_r
}

type Healpix_Ordering_Scheme int
func _swig_getRING() (_swig_ret Healpix_Ordering_Scheme) {
	var swig_r Healpix_Ordering_Scheme
	swig_r = (Healpix_Ordering_Scheme)(C._wrap_RING_healpix_09aa05d3d2b4025d())
	return swig_r
}

var RING Healpix_Ordering_Scheme = _swig_getRING()
func _swig_getNEST() (_swig_ret Healpix_Ordering_Scheme) {
	var swig_r Healpix_Ordering_Scheme
	swig_r = (Healpix_Ordering_Scheme)(C._wrap_NEST_healpix_09aa05d3d2b4025d())
	return swig_r
}

var NEST Healpix_Ordering_Scheme = _swig_getNEST()
type SwigcptrHEALPixMap uintptr

func (p SwigcptrHEALPixMap) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrHEALPixMap) SwigIsHEALPixMap() {
}

func NewHEALPixMap__SWIG_0() (_swig_ret HEALPixMap) {
	var swig_r HEALPixMap
	swig_r = (HEALPixMap)(SwigcptrHEALPixMap(C._wrap_new_HEALPixMap__SWIG_0_healpix_09aa05d3d2b4025d()))
	return swig_r
}

func NewHEALPixMap__SWIG_1(arg1 int, arg2 Healpix_Ordering_Scheme) (_swig_ret HEALPixMap) {
	var swig_r HEALPixMap
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (HEALPixMap)(SwigcptrHEALPixMap(C._wrap_new_HEALPixMap__SWIG_1_healpix_09aa05d3d2b4025d(C.swig_intgo(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func NewHEALPixMap(a ...interface{}) HEALPixMap {
	argc := len(a)
	if argc == 0 {
		return NewHEALPixMap__SWIG_0()
	}
	if argc == 2 {
		return NewHEALPixMap__SWIG_1(a[0].(int), a[1].(Healpix_Ordering_Scheme))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrHEALPixMap) Pix2ring(arg2 int64) (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (int64)(C._wrap_HEALPixMap_pix2ring_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0), C.swig_type_2(_swig_i_1)))
	return swig_r
}

func DeleteHEALPixMap(arg1 HEALPixMap) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_HEALPixMap_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0))
}

type HEALPixMap interface {
	Swigcptr() uintptr
	SwigIsHEALPixMap()
	Pix2ring(arg2 int64) (_swig_ret int64)
}

func Orientation(arg1 Vec3_t_Sl_float64_Sg_, arg2 Vec3_t_Sl_float64_Sg_) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (float64)(C._wrap_orientation_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func V_angle(arg1 Vec3_t_Sl_float64_Sg_, arg2 Vec3_t_Sl_float64_Sg_) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (float64)(C._wrap_v_angle_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func Cosdist_zphi(arg1 float64, arg2 float64, arg3 float64, arg4 float64) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (float64)(C._wrap_cosdist_zphi_healpix_09aa05d3d2b4025d(C.double(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2), C.double(_swig_i_3)))
	return swig_r
}

func Find_enclosing_circle(arg1 Std_vector_Sl_vec3_t_Sl_float64_Sg__Sg_, arg2 Vec3_t_Sl_float64_Sg_, arg3 *float64) {
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	C._wrap_find_enclosing_circle_healpix_09aa05d3d2b4025d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_voidp(_swig_i_2))
}


type SwigcptrStd_vector_Sl_vec3_t_Sl_float64_Sg__Sg_ uintptr
type Std_vector_Sl_vec3_t_Sl_float64_Sg__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_vec3_t_Sl_float64_Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrVec3_t_Sl_float64_Sg_ uintptr
type Vec3_t_Sl_float64_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVec3_t_Sl_float64_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

